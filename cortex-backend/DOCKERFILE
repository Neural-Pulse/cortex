# Estágio 1: Cria um contêiner temporário para copiar o certificado
FROM alpine:latest AS cert-fetcher

# Instala o curl (ou qualquer outra ferramenta que você precisa para copiar o arquivo)
RUN apk --no-cache add curl

# Copia o certificado do contêiner ES para o diretório temporário
RUN curl -o /tmp/http_ca.crt es01:/usr/share/elasticsearch/config/certs/http_ca.crt

# Estágio 2: Constrói a imagem final da sua aplicação
FROM golang:1.17-alpine AS builder

# Define o diretório de trabalho dentro do contêiner
WORKDIR /app

# Copia os arquivos necessários para dentro do contêiner
COPY go.mod go.sum ./

# Baixa e instala as dependências do Go
RUN go mod download

# Copia o restante dos arquivos para dentro do contêiner
COPY . .

# Copia o certificado do contêiner temporário para o diretório do seu aplicativo
COPY --from=cert-fetcher /tmp/http_ca.crt /app/cmd/app/http_ca.crt

# Compila o código Go para um binário
RUN CGO_ENABLED=0 GOOS=linux go build -o app .

# Estágio 3: Cria a imagem final mínima
FROM alpine:latest  

# Define o diretório de trabalho dentro do contêiner
WORKDIR /root/

# Copia o binário compilado da etapa anterior
COPY --from=builder /app/app .

# Expõe a porta 8080 para acesso externo
EXPOSE 8080

# Comando para iniciar a aplicação
CMD ["./app"]
